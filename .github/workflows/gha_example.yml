name: GHAction example

on:
  workflow_dispatch:
  push:
    branches:
      - "main"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  ci_step:
    name: Build, test, and push Docker image
    runs-on: ubuntu-latest

    permissions:
      pull-requests: write

    steps:
      - 
        name: Check out the source_repo
        uses: actions/checkout@v4

      - 
        name: QEMU set-up
        uses: docker/setup-qemu-action@v3

      - 
        name: Buildx set-up
        uses: docker/setup-buildx-action@v3

      -
        name: Docker metadata definitions 
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ vars.GH_USERNAME }}/zad2
          flavor: latest=false
          tags: |
            type=sha,priority=100,prefix=sha-,format=short
            type=semver,priority=200,pattern={{version}}

      - 
        name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - 
        name: Log in to the Github container registry 
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ vars.GH_USERNAME }}
          password: ${{ secrets.GH_TOKEN }}

      -
        name: Build local image 
        run: |
            docker buildx inspect --bootstrap
            docker build . --file Dockerfile --tag zad2:v1
      
      -
        name: Scan local image 
        id: image-scan
        run: | 
            curl -fsSL https://raw.githubusercontent.com/docker/scout-cli/main/install.sh -o install-scout.sh
            docker login -u ${{ vars.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
            sh install-scout.sh
            docker scout cves --exit-code --only-severity high,critical zad2:v1
            
      - 
        name: Build and push Docker image
        if: success()
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          cache-from: |
            type=gha
          cache-to: |
            type=gha 
          tags: ${{ steps.meta.outputs.tags }}