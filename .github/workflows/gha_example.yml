name: GHAction example  

on:
  workflow_dispatch:
  push:
    tags: ["*"]
    branches:
      - "main"
  pull_request:
    branches: ["**"]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  ci_step:
    name: Build, tag and push Docker image to DockerHub
    runs-on: ubuntu-latest

    permissions:
      pull-requests: write
      
    steps:
      - 
        name: Check out the source_repo
        uses: actions/checkout@v4

      - 
        name: QEMU set-up
        uses: docker/setup-qemu-action@v3

      - 
        name: Buildx set-up
        uses: docker/setup-buildx-action@v3

      -
        name: Docker metadata definitions
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ vars.DOCKERHUB_USERNAME }}/example
          flavor: latest=false
          tags: |
            type=sha,priority=100,prefix=sha-,format=short
            type=semver,priority=200,pattern={{version}}   

       - 
        name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - 
        name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true 
          cache-from: |
            type=registry,ref=${{ vars.DOCKERHUB_USERNAME }}/example:cache 
          cache-to: |
            type=registry,ref=${{ vars.DOCKERHUB_USERNAME }}/example:cache  
          tags: ${{ steps.meta.outputs.tags }}

        - 
        name: Search for high and critical vulnerabilities
        id: docker-scout-cves
        uses: docker/scout-action@v1
        with:
          command: cves
          image: ${{ steps.meta.outputs.tags }}
          format: sarif
          sarif-file: cves
          output: cves
          only-severities: critical,high
          summary: true
          exit-code: true

      - 
        name: Push to public
        if: success()
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          cache-from: |
            type=registry,ref=${{ vars.DOCKERHUB_USERNAME }}/example:cache 
          cache-to: |
            type=registry,ref=${{ vars.DOCKERHUB_USERNAME }}/example:cache  
          tags: ${{ steps.meta.outputs.tags }}
      